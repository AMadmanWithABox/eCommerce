# This file was generated by ChatGPT
import random
import requests
from concurrent.futures import ThreadPoolExecutor

basket_service_base_url = 'http://basket_service:5001/api/v1/basket'
items_service_base_url = 'http://items_service:5000/api/v1/items'
num_baskets = 100
min_items_per_basket = 1
max_items_per_basket = 10
num_threads = 10


def add_random_items_to_basket(basket_id):
    # Add random items to the basket
    num_items = random.randint(min_items_per_basket, max_items_per_basket)
    for _ in range(num_items):
        item = random.choice(all_items)
        item_uuid = item['item_uuid']
        add_item_response = requests.post(
            f'{basket_service_base_url}/{basket_id}/add_item?item_uuid={item_uuid}'
        )
        add_item_response.raise_for_status()
        print(f"Added item {item_uuid} to basket {basket_id}")


# Get all available items from the items_service
items_response = requests.get(f'{items_service_base_url}')
items_response.raise_for_status()
all_items = items_response.json()

# Create baskets with random items
with ThreadPoolExecutor(max_workers=num_threads) as executor:
    # Create new baskets in parallel
    future_baskets = [executor.submit(requests.post, f'{basket_service_base_url}') for _ in range(num_baskets)]

    # Wait for baskets to be created and retrieve their IDs
    responses = [future.result() for future in future_baskets]
    json_responses = [response.json() for response in responses]
    basket_ids = [response['basket_id'] for response in json_responses]

    # Add random items to each basket in parallel
    executor.map(add_random_items_to_basket, basket_ids)
